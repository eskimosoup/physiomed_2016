@mixin border-radius-with-dark-box-shadow {
  // border-radius: 6px;
  box-shadow: 1px 3px 3px 0 $brown;
}

@mixin border-radius-with-box-shadow {
  // border-radius: 6px;
  box-shadow: 3px 3px 8px 4px #ccc;
}

@mixin content-box-title {
  border-bottom: 1px solid $green;
  font-size: rem(21px);
  color: $brown;
  font-weight: $open-sans-light;
  margin: rem(5px);
  padding: rem(0 5px 10px);
  text-transform: uppercase;

  @include media('>768px') {
  //  margin: rem(15px 5px 25px);
  //  padding: rem(0 20px 10px);
  }
}

// Functions
// Lazy man's rem-calc, requires Foundation
@function rem($num) {
  @return rem-calc($num);
}

// http://css-tricks.com/snippets/css/less-mixin-for-rem-font-sizing/
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// http://erskinedesign.com/blog/calculating-ems-scss/
@function em($target-px, $basefont: 14px) {
  @return (strip-unit($target-px) / strip-unit($basefont)) * 1em;
}

// Useful mixins: be sure to use!
// https://web-design-weekly.com/2013/05/12/handy-sass-mixins/
@mixin opacity($opacity) {
  opacity: $opacity;
  $opacity-ie: $opacity * 100;
  filter: alpha(opacity = $opacity-ie); //IE8
}

@mixin border-radius($radius) {
  background-clip: padding-box;  // stops bg color from leaking outside the border
  border-radius: $radius;
}

@mixin border-top-radius($radius) {
  border-top-right-radius: $radius;
  border-top-left-radius: $radius;
  background-clip: padding-box;
}

@mixin border-right-radius($radius) {
  border-bottom-right-radius: $radius;
  border-top-right-radius: $radius;
  background-clip: padding-box;
}

@mixin border-bottom-radius($radius) {
  border-bottom-right-radius: $radius;
  border-bottom-left-radius: $radius;
  background-clip: padding-box;
}

@mixin border-left-radius($radius) {
  border-bottom-left-radius: $radius;
  border-top-left-radius: $radius;
  background-clip: padding-box;
}

@mixin position ($position: absolute, $top: auto, $right: auto, $bottom: auto, $left: auto) {
  bottom: $bottom;
  left: $left;
  position: $position;
  right: $right;
  top: $top;
}

@mixin position-absolute ($top: auto, $right: auto, $bottom: auto, $left: auto) {
  bottom: $bottom;
  left: $left;
  position: absolute;
  right: $right;
  top: $top;
}

// https://css-tricks.com/snippets/sass/sass-things-links/
@mixin links ($link, $visit: $link, $hover: $link, $active: $link) {
  a {
    color: $link;

    &:visited {
      color: $visit;
    }

    &:hover {
      color: $hover;
    }

    &:active {
      color: $active;
    }
  }
}

@mixin clearfix {
  &::before,
  &::after {
    content: '';
    display: table;
  }

  &::after {
    clear: both;
  }
}

// Not quite mixins, but placeholder classes
%text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

%visually-hidden {
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

// Nice design elements
// http://hackingui.com/front-end/10-best-scss-utilities/
// @include triangle within a pseudo element and add positioning properties (ie. top, left)
// $direction: up, down, left, right
@mixin triangle($direction, $color, $size: 6px) {
  content: '';
  display: block;
  position: absolute;
  height: 0; width: 0;
  @if ($direction == 'up'){
    border-bottom: $size solid $color;
    border-left: 1 / 2 * $size solid transparent;
    border-right: 1 / 2 * $size solid transparent;
  } @else if ($direction == 'down'){
    border-left: 1 / 2 * $size solid transparent;
    border-right: 1 / 2 * $size solid transparent;
    border-top: $size solid $color;
  } @else if ($direction == 'left'){
    border-bottom: 1 / 2 * $size solid transparent;
    border-right: $size solid $color;
    border-top: 1 / 2 * $size solid transparent;
  } @else if ($direction == 'right'){
    border-bottom: 1 / 2 * $size solid transparent;
    border-left: $size solid $color;
    border-top: 1 / 2 * $size solid transparent;
  }
}
